
1. Подготовка к работе
bash
# Переключиться на основную ветку
git checkout master

# Забрать последние изменения с GitHub
git pull origin master
2. Создание ветки для новой задачи
bash
# Создать и переключиться на новую ветку
git checkout -b тип/название-задачи

# Примеры:
git checkout -b feat/add-new-feature
git checkout -b fix/login-bug
git checkout -b docs/update-readme
3. Внесение изменений
bash
# Проверить статус изменений
git status

# Посмотреть конкретные изменения в файлах
git diff

# Добавить файлы для коммита
git add путь/к/файлу.java

git add .  # Добавить все измененные файлы
4. Создание коммита
bash
# Создать коммит с описанием
git commit -m "тип: краткое описание"

# Примеры:
git commit -m "feat: добавил авторизацию пользователя"
git commit -m "fix: исправил ошибку в расчетах"
git commit -m "docs: обновил документацию API"
5. Отправка на GitHub
bash
# Отправить ветку на GitHub (в первый раз)
git push -u origin имя-ветки

# Последующие отправки в эту же ветку
git push
6. Создание Pull Request
1.	Перейдите на GitHub в вашем репозитории
2.	Нажмите "Compare & pull request"
3.	Заполните описание и создайте PR
4.	Дождитесь ревью (если работаете в команде)
5.	Нажмите "Merge pull request"
7. Завершение работы
bash
# Вернуться на основную ветку
git checkout master

# Обновить локальную версию
git pull origin master

# Удалить локальную ветку (после мержа)
git branch -d имя-ветки

# Обновить информацию о ветках
git fetch --prune
